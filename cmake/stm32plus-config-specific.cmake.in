include(CMakeForceCompiler)

get_filename_component(INSTALLDIR "${CMAKE_CURRENT_LIST_DIR}/../.." ABSOLUTE)
message(STATUS "Using stm32plus install: ${INSTALLDIR}")
message(STATUS "Using stm32plus prefix:  %(INSTALLDIR_PREFIX)s")
add_definitions("-DSTM32PLUS_BUILD")

set(STM32PLUS_INSTALLDIR "${INSTALLDIR}" CACHE INTERNAL "stm32plus installdir")
set(STM32PLUS_LIBS "${INSTALLDIR}/lib/%(INSTALLDIR_PREFIX)s/%(LIBSTM32PLUS)s" CACHE INTERNAL "library location")

# These paths cover your bases if you're using pure stm32plus interfaces.
set(STM32PLUS_INCLUDE_DIRS
  ${INSTALLDIR}/include/%(INSTALLDIR_PREFIX)s/)

# You'll need include paths under here if you're calling into stdperiph or cmsis directly.
set(STM32PLUS_FWLIB_DIR ${INSTALLDIR}/include/%(INSTALLDIR_PREFIX)s/fwlib)

if(mcu STREQUAL "f1cle")
	set(STM32PLUS_DEVINC ${INSTALLDIR}/include/stm32plus-040100/fwlib/f1/cmsis/CM3/DeviceSupport/ST/STM32F10x/)
else()
	set(STM32PLUS_DEVINC ${INSTALLDIR}/include/stm32plus-040100/fwlib/f4/cmsis/Device/ST/STM32F4xx/Include)
endif()

function(add_bin_target TARGET)
  if(EXECUTABLE_OUTPUT_PATH)
		set(FILENAME "${EXECUTABLE_OUTPUT_PATH}/${TARGET}")
  else()
	  set(FILENAME "${TARGET}")
	endif()
	add_custom_target(${TARGET}.bin ALL COMMAND ${CMAKE_OBJCOPY} -Obinary ${FILENAME} ${FILENAME}.bin)
	add_dependencies(${TARGET}.bin ${TARGET})
endfunction()

function(add_hex_target TARGET)
  if(EXECUTABLE_OUTPUT_PATH)
		set(FILENAME "${EXECUTABLE_OUTPUT_PATH}/${TARGET}")
  else()
	  set(FILENAME "${TARGET}")
	endif()
	add_custom_target(${TARGET}.hex ALL COMMAND ${CMAKE_OBJCOPY} -Oihex ${FILENAME} ${FILENAME}.hex)
	add_dependencies(${TARGET}.hex ${TARGET})
endfunction()
